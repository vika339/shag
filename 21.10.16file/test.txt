Проверка существования и вычисление размера файла в PHP
Перед тем, как начать работу с файлами необходимо убедиться, что данные файлы на сервере существуют. Для проверки существования файлов используются две функции: file_exists() и is_file(). Рассмотрим их подробнее.

file_exists()
В качестве аргумента функции задается файл. Если файл существует, то функция возвращает true, в противном случае false.

Пример использования функции

PHP

$filename="file.txt";
if (! file_exists ($filename)) {
print "Файл $filename не существует!";
}
1
2
3
4
$filename="file.txt";
if (! file_exists ($filename)) {
print "Файл $filename не существует!";
}
Практическое задание
Задание 1. Создайте в рабочей папке сервера файл test.txt. Используя функцию file_exists напишите скрипт checkfile.php, который будет проверять наличие данного файла. Если файл не существует — выводить ошибку.

is_file()
Более продвинутая версия функции для проверки существования файла. Так как и file_exists возвращает логическое true в случае наличия файла и логическое false в случае отсутствия. Помимо наличия или отсутствия проверяется возможность чтения и записи в данный файл.

Пример использования функции для проверки файла:

PHP

	$file = "test.txt";
	if (is_file($file)) {
	echo "Файл  $file существует и готов к чтению и записи";
	}
	else {
	echo 'Ошибка! Файл не существует';
	}
1
2
3
4
5
6
7
  $file = "test.txt";
  if (is_file($file)) {
  echo "Файл  $file существует и готов к чтению и записи";
  }
  else {
  echo 'Ошибка! Файл не существует';
  }
Практическое задание
Задание 2. Модифицируйте задание 1 таким образом, чтобы доступ к файлу проверялся не только функцией file_exists, но и функцией is_file.

Как узнать размер файла
Узнать размер файла с помощью PHP можно используя функцию filesize(), которая возвращает размер файла в байтах, либо false в случае если файл не существует.

Синтаксис применения функции представлен ниже:

PHP

$fs = filesize("test.txt");
echo "Размер файла составляет $fs байт";
1
2
$fs = filesize("test.txt");
echo "Размер файла составляет $fs байт";
Практическое задание
Задание 3. Выведите на экран размер файла test.txt из предыдущего примера, с использованием filesize(). Добавьте в файл информацию. Изменится ли размер файла?

Задание 4. Если размер файла не превышает 30кб сформируйте на странице средствами php гиперссылку на данный файл. При наведении на гиперссылку должна всплывать подсказка с размером файла.




Запись в файл средствами PHP
Проверка возможности записи в файл
Перед тем, как производить запись в файл, необходимо убедиться что файл, в который планируется вестись запись, существует и доступен для операции записи. Проверка осуществляется функцией is_writeable()

Синтаксис функции is_writeable() представлен ниже.

Запись строки в файл
Для записи строковой переменной в файл используется функция fwrite():

fwrite (манипулятор, ‘переменная’)

Где манипулятор — значение полученное при открытии файла, переменная — строка.

Пример открытия и записи в файл приведен в примере ниже:

PHP

<?
$data = "Hi hi hi";
$filename = "test.txt";
if ( is_writeable($filename) ) {
	$fh = fopen($filename, "a+");
	$success = fwrite($fh, $data);
	fclose($fh); 
}
else {
	echo "Error";
}
?>
1
2
3
4
5
6
7
8
9
10
11
12
<?
$data = "Hi hi hi";
$filename = "test.txt";
if ( is_writeable($filename) ) {
  $fh = fopen($filename, "a+");
  $success = fwrite($fh, $data);
  fclose($fh); 
}
else {
  echo "Error";
}
?>
Практическое задание
Задание 1. Создайте скрипт, который в начало файла test.txt добавит абзац Lorem Ipsum. Выведите размер файла до записи, и после записи. При создании скрипта проверьте файл на существование, откройте файл и после записи — закройте.

Задание 2. Дополните предыдущее задание выводом информации о успешной записи или ошибке.Lorem Ipsum